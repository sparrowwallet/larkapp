plugins {
    id 'application'
    id 'org.gradlex.extra-java-module-info' version '1.9'
}

group = 'com.sparrowwallet'
version = '0.9'

repositories {
    mavenCentral()
    maven { url 'https://code.sparrowwallet.com/api/packages/sparrowwallet/maven' }
}

tasks.withType(AbstractArchiveTask) {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

application {
    mainModule = 'com.sparrowwallet.larkapp'
    mainClass = 'com.sparrowwallet.larkapp.LarkCli'
}

dependencies {
    implementation(project(':drongo'))
    implementation(project(':lark'))
    implementation('org.jcommander:jcommander:2.0')
    implementation('com.fasterxml.jackson.core:jackson-databind:2.17.2')
    implementation('org.slf4j:slf4j-api:2.0.12')
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

extraJavaModuleInfo {
    module('co.nstant.in:cbor', 'co.nstant.in.cbor') {
        exports('co.nstant.in.cbor')
        exports('co.nstant.in.cbor.model')
        exports('co.nstant.in.cbor.builder')
    }
    module('org.jcommander:jcommander', 'org.jcommander') {
        exports('com.beust.jcommander')
    }
    module('org.hid4java:hid4java', 'org.hid4java') {
        exports('org.hid4java')
    }
    module('org.usb4java:usb4java', 'org.usb4java') {
        exports('org.usb4java')
    }
    module('org.usb4java:libusb4java|linux-x86', 'org.usb4java.linux_x86')
    module('org.usb4java:libusb4java|linux-x86-64', 'org.usb4java.linux_x86_64')
    module('org.usb4java:libusb4java|win32-x86', 'org.usb4java.win32_x86')
    module('org.usb4java:libusb4java|win32-x86-64', 'org.usb4java.win32_x86_64')
    module('org.usb4java:libusb4java|darwin-x86-64', 'org.usb4java.darwin_x86_64')
    module('org.usb4java:libusb4java|linux-arm', 'org.usb4java.linux_arm')
    module('org.usb4java:libusb4java|linux-aarch64', 'org.usb4java.linux_aarch64')
    module('com.google.guava:listenablefuture|empty-to-avoid-conflict-with-guava', 'com.google.guava.listenablefuture')
    module('com.google.code.findbugs:jsr305', 'com.google.code.findbugs.jsr305')
}